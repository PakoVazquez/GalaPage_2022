<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="attrOnlineBilling01" xml:space="preserve">
    <value>Printing a QR Code on the Sales Receipt</value>
  </data>
  <data name="attrOnlineBilling02" xml:space="preserve">
    <value>Billing folio, to manually enter the code</value>
  </data>
  <data name="attrOnlineBilling03" xml:space="preserve">
    <value>Sending the Invoice (PDF and XML) to the Client and to the email indicated in the program</value>
  </data>
  <data name="attrOnlineBilling04" xml:space="preserve">
    <value>Notification to the client in the event that he cannot prepare his invoice and a contact email and telephone number for follow-up.</value>
  </data>
  <data name="attrOnlineBilling05" xml:space="preserve">
    <value>Configuration of the times available for billing.</value>
  </data>
  <data name="attrOnlineBilling06" xml:space="preserve">
    <value>Possibility of invoicing in version 3.3 (valid until Dec 31, 2022) and 4.0 of the SAT</value>
  </data>
  <data name="attrOnlineBilling07" xml:space="preserve">
    <value>Forwarding the invoice from the Billing portal</value>
  </data>
  <data name="attrOnlineBilling08" xml:space="preserve">
    <value>Without extra or hidden cost, this service is included from the Standard Policy plan</value>
  </data>
  <data name="Header10" xml:space="preserve">
    <value>Electronic bill</value>
  </data>
  <data name="Header20" xml:space="preserve">
    <value>Electronic bill</value>
  </data>
  <data name="Header30" xml:space="preserve">
    <value>Online Electronic Invoice</value>
  </data>
  <data name="HeaderBillingCard01" xml:space="preserve">
    <value>Payment receipts</value>
  </data>
  <data name="HeaderBillingCard02" xml:space="preserve">
    <value>Credit notes</value>
  </data>
  <data name="HeaderBillingCard03" xml:space="preserve">
    <value>Payment advances</value>
  </data>
  <data name="HeaderBillingCard04" xml:space="preserve">
    <value>Global Invoice</value>
  </data>
  <data name="HeaderBillingCard05" xml:space="preserve">
    <value>Bill of Lading</value>
  </data>
  <data name="HeaderBillingCard06" xml:space="preserve">
    <value>Billing Models</value>
  </data>
  <data name="HeaderBillingCard07" xml:space="preserve">
    <value>Cancellation of Invoices</value>
  </data>
  <data name="HeaderBillingCard08" xml:space="preserve">
    <value>Invoice Status</value>
  </data>
  <data name="txtBilling01" xml:space="preserve">
    <value>All Gala Sistemas systems include the Electronic Invoicing module, so that you can generate invoices for your customers and your global sales invoices with just a few clicks.</value>
  </data>
  <data name="txtBilling02" xml:space="preserve">
    <value>Gala Sistemas has the Online Billing Platform for your business, saving operating time in your business, allowing your customers to invoice from their phone and/or computer.</value>
  </data>
  <data name="txtBillingCard01" xml:space="preserve">
    <value>Generate payment receipts on the invoices that you have generated as Payment in Installments</value>
  </data>
  <data name="txtBillingCard02" xml:space="preserve">
    <value>Create the credit note on your invoice, with a few clicks.</value>
  </data>
  <data name="txtBillingCard03" xml:space="preserve">
    <value>Deliver the advance receipts and relate them to the invoice generated from these concepts.</value>
  </data>
  <data name="txtBillingCard04" xml:space="preserve">
    <value>Generate your Global Invoice very quickly and safely.</value>
  </data>
  <data name="txtBillingCard05" xml:space="preserve">
    <value>Generate these documents, for the transfer of your merchandise, it can be connected to the Warehouse system, to facilitate the stamping.</value>
  </data>
  <data name="txtBillingCard06" xml:space="preserve">
    <value>Implement only the product keys and units of measure that you need from the SAT, so you don't have to navigate through all of them, when you don't need them.</value>
  </data>
  <data name="txtBillingCard07" xml:space="preserve">
    <value>Make the cancellation and list the canceled invoice with the one it replaces.</value>
  </data>
  <data name="txtBillingCard08" xml:space="preserve">
    <value>Check the Status of your invoices before the SAT.</value>
  </data>
  <data name="txtOnlineBilling01" xml:space="preserve">
    <value>With Online Billing, you free your cashiers from the time invested in these processes.</value>
  </data>
  <data name="txtOnlineBilling02" xml:space="preserve">
    <value>24/7 availability to prepare your invoice, you decide the configuration to invoice.</value>
  </data>
</root>