<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnBuyHere" xml:space="preserve">
    <value>Buy Here</value>
  </data>
  <data name="btnKnowMore" xml:space="preserve">
    <value>Know more</value>
  </data>
  <data name="btnPrices" xml:space="preserve">
    <value>Prices</value>
  </data>
  <data name="btnRequestADemo" xml:space="preserve">
    <value>Request a demo</value>
  </data>
  <data name="btnWhatsApp" xml:space="preserve">
    <value>WhatsApp</value>
  </data>
  <data name="CompletedPOS" xml:space="preserve">
    <value>Complete Administration System</value>
  </data>
  <data name="DevelopedBy" xml:space="preserve">
    <value>by Gala Sistemas S.A. de C.V.</value>
  </data>
  <data name="ECommerceAttr1" xml:space="preserve">
    <value>Works like an app</value>
  </data>
  <data name="ECommerceAttr2" xml:space="preserve">
    <value>Post only the dishes you want</value>
  </data>
  <data name="ECommerceAttr3" xml:space="preserve">
    <value>Activate the Delivery Service Mode, only if you have it</value>
  </data>
  <data name="ECommerceAttr4" xml:space="preserve">
    <value>Receive your income without intermediaries</value>
  </data>
  <data name="ECommerceAttr5" xml:space="preserve">
    <value>Stop paying high commissions</value>
  </data>
  <data name="FirstTextMercadoPago" xml:space="preserve">
    <value>Now you can accept payments with credit and debit cards through the </value>
  </data>
  <data name="Header10" xml:space="preserve">
    <value>Integrate Mercado Pago to your Amigo Restaurante system</value>
  </data>
  <data name="Header30" xml:space="preserve">
    <value>Software designed to solve real problems in the restaurant industry.</value>
  </data>
  <data name="Header40" xml:space="preserve">
    <value>e-Commerce of your Restaurant, linked with Amigo Restaurante</value>
  </data>
  <data name="Header41" xml:space="preserve">
    <value>Your Online Restaurant.</value>
  </data>
  <data name="SecondTextMercadoPago" xml:space="preserve">
    <value>platform, thanks to the integration of this means of payment in our commander.</value>
  </data>
  <data name="TextCardInvoice" xml:space="preserve">
    <value>Generate your invoices quickly and easily, integrate online billing for a better service to your customers. Generate the global invoice with a few clicks. With online billing you can have the option of the SAT 3.3 and 4.0 invoice.</value>
  </data>
  <data name="TextCardRestaurant" xml:space="preserve">
    <value>Restaurant Management System, includes Inventories, Forecasts, Accounts Receivable, Purchases, Costs, Reports, Credit Notes, Production, The Cloud system for better administration. Exclusive ticket cancellation for administration.</value>
  </data>
  <data name="TextCardWarehouse" xml:space="preserve">
    <value>Manage your Warehouse with Internal Production, Inventory Control, Costing of your Raw Materials, Route Control, Online Orders, Purchase and Sales Forecasts.</value>
  </data>
  <data name="TextCompletedPOS" xml:space="preserve">
    <value>It is not only a Point of Sale (POS) system, it contains much more than that, we invite you to discover it.</value>
  </data>
  <data name="txtInfo" xml:space="preserve">
    <value>Information</value>
  </data>
</root>